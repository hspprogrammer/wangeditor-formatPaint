{"version":3,"file":"index.esm.js","sources":["../src/components/Editor.vue","../src/components/Toolbar.vue"],"sourcesContent":["<script lang=\"ts\">\nimport Vue from 'vue';\nimport { createEditor } from '@wangeditor/editor';\n\nfunction genErrorInfo(fnName: string) {\n  let info = `请使用 '@${fnName}' 事件，不要放在 props 中`;\n  info += `\\nPlease use '@${fnName}' event instead of props`;\n  return info;\n}\n\nexport default Vue.extend({\n  //【注意】单独写 <template>...</template> 时，rollup 打包完浏览器运行时报错，所以先在这里写 template\n  render(h) {\n    return h('div', { ref: 'box' });\n  },\n  name: 'Editor',\n  data() {\n    return {\n      curValue: '',\n      editor: null,\n    };\n  },\n  props: ['defaultContent', 'defaultConfig', 'mode', 'defaultHtml', 'value'], // value 用于自定义 v-model\n  mounted() {\n    this.create();\n  },\n  watch: {\n    // 监听 'value' 属性变化 - value 用于自定义 v-model\n    value(newVal) {\n      const isEqual = newVal === this.curValue;\n      if (isEqual) return; // 和当前内容一样，则忽略\n\n      // 重置 HTML\n      this.setHtml(newVal);\n    },\n  },\n  methods: {\n    // 重置 HTML\n    setHtml(newHtml: string) {\n      const editor = this.editor as any;\n      if (editor == null) return;\n      editor.setHtml(newHtml);\n    },\n\n    // 创建 editor\n    create() {\n      if (this.$refs.box == null) return;\n\n      const defaultConfig = this.defaultConfig || {};\n\n      const defaultContent = JSON.stringify(\n        Array.isArray(this.defaultContent) ? this.defaultContent : []\n      );\n\n      createEditor({\n        selector: this.$refs.box as Element,\n        html: this.defaultHtml || this.value || '',\n        config: {\n          ...defaultConfig,\n          onCreated: (editor) => {\n            this.editor = Object.seal(editor) as any; // 注意，一定要用 Object.seal() 否则会报错\n\n            this.$emit('onCreated', editor);\n            if (defaultConfig.onCreated) {\n              const info = genErrorInfo('onCreated');\n              throw new Error(info);\n            }\n          },\n          onChange: (editor) => {\n            const editorHtml = editor.getHtml();\n            this.curValue = editorHtml; // 记录当前 html 内容\n            this.$emit('input', editorHtml); // 用于自定义 v-model\n\n            this.$emit('onChange', editor);\n            if (defaultConfig.onChange) {\n              const info = genErrorInfo('onChange');\n              throw new Error(info);\n            }\n          },\n          onDestroyed: (editor) => {\n            this.$emit('onDestroyed', editor);\n            if (defaultConfig.onDestroyed) {\n              const info = genErrorInfo('onDestroyed');\n              throw new Error(info);\n            }\n          },\n          onMaxLength: (editor) => {\n            this.$emit('onMaxLength', editor);\n            if (defaultConfig.onMaxLength) {\n              const info = genErrorInfo('onMaxLength');\n              throw new Error(info);\n            }\n          },\n          onFocus: (editor) => {\n            this.$emit('onFocus', editor);\n            if (defaultConfig.onFocus) {\n              const info = genErrorInfo('onFocus');\n              throw new Error(info);\n            }\n          },\n          onBlur: (editor) => {\n            this.$emit('onBlur', editor);\n            if (defaultConfig.onBlur) {\n              const info = genErrorInfo('onBlur');\n              throw new Error(info);\n            }\n          },\n          customAlert: (info, type) => {\n            this.$emit('customAlert', info, type);\n            if (defaultConfig.customAlert) {\n              const info = genErrorInfo('customAlert');\n              throw new Error(info);\n            }\n          },\n          customPaste: (editor, event) => {\n            if (defaultConfig.customPaste) {\n              const info = genErrorInfo('customPaste');\n              throw new Error(info);\n            }\n            let res;\n            this.$emit('customPaste', editor, event, (val: any) => {\n              res = val;\n            });\n            return res;\n          },\n        },\n        content: JSON.parse(defaultContent),\n        mode: this.mode || 'default',\n      });\n    },\n  },\n});\n</script>\n","<script lang=\"ts\">\nimport Vue from 'vue';\nimport { createToolbar, DomEditor } from '@wangeditor/editor';\n\nexport default Vue.extend({\n  name: 'Toolbar',\n  render(h) {\n    return h('div', { ref: 'box' });\n  },\n  props: ['editor', 'defaultConfig', 'mode'],\n  methods: {\n    // 创建 toolbar\n    create(editor: any) {\n      if (this.$refs.box == null) return;\n      if (editor == null) return;\n      if (DomEditor.getToolbar(editor)) return // 不重复创建\n\n      createToolbar({\n        editor,\n        selector: this.$refs.box as Element,\n        config: this.defaultConfig || {},\n        mode: this.mode || 'default',\n      });\n    },\n  },\n  watch: {\n    editor: {\n      handler(e) {\n        if (e == null) return;\n        this.create(e);\n      },\n      immediate: true,\n    }\n  }\n});\n</script>\n"],"names":["genErrorInfo","fnName","info","Vue","extend","render","h","ref","name","data","curValue","editor","props","mounted","this","create","watch","value","newVal","setHtml","methods","newHtml","$refs","box","defaultConfig","defaultContent","JSON","stringify","Array","isArray","createEditor","selector","html","defaultHtml","config","onCreated","_this","Object","seal","$emit","Error","onChange","editorHtml","getHtml","onDestroyed","onMaxLength","onFocus","onBlur","customAlert","type","info_1","customPaste","event","res","val","content","parse","mode","DomEditor","getToolbar","createToolbar","handler","e","immediate"],"mappings":"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"}